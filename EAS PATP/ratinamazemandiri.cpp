#include <stdio.h>
#define n 10

int maze[n][n] =   {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, //1 maze[rows][columns]
                    {0, 0, 0, 1, 1, 1, 1, 1, 1, 0}, //2
                    {1, 1, 1, 1, 0, 0, 0, 1, 0, 0}, //3
                    {0, 1, 0, 1, 1, 1, 1, 1, 0, 0}, //4
                    {0, 1, 0, 0, 0, 0, 0, 1, 0, 0}, //5
                    {0, 1, 0, 1, 1, 1, 1, 1, 0, 0}, //6
                    {0, 1, 0, 1, 1, 1, 1, 0, 0, 0}, //7
                    {1, 1, 1, 1, 0, 0, 1, 1, 1, 1}, //8
                    {0, 0, 0, 1, 0, 0, 0, 0, 0, 0}, //9
                    {0, 0, 0, 1, 1, 1, 1, 1, 0, 0}}; //10

int solution[n][n] =   {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, //1
                        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, //2
                        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, //3
                        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, //4
                        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, //5
                        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, //6
                        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, //7
                        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, //8
                        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, //9
                        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}; //10

bool isSafe(int maze[n][n], int x, int y) {
    if(x >= 0 && x < n && y >= 0 && y < n && maze[x][y] == 1)
    {
        return true;
        }
    return false;
}

void processUtil(int row, int col, int maze[n][n]) {

    if()

}

void process(int row, int col, int maze[n][n]) {
    if(row >= n && col >= n) {
        processUtil(row, col, maze);
    }

    else {
        printf("solution doesn't exist");
    }
}

int main() {

    process(2, 0, maze);

}